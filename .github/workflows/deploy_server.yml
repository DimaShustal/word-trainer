name: Deploy server

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version in format 1.0.0'
        required: true

defaults:
  run:
    shell: bash
    working-directory: ./server

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: word-trainer-api-amd64

permissions:
  contents: write

jobs:
  deploy_server_folder:
    name: 'Deploy server folder'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Create .env file'
        run: |
          touch .env
          echo GOOGLE_TRANSLATE_API_KEY=${{ secrets.SERVER_GOOGLE_TRANSLATE_API_KEY }} >> .env
          echo JWT_SECRET_KEY=${{ secrets.SERVER_JWT_SECRET_KEY }} >> .env
          echo MONGODB_PASSWORD=${{ secrets.SERVER_MONGODB_PASSWORD }} >> .env
          echo MONGODB_USERNAME=${{ secrets.SERVER_MONGODB_USERNAME }} >> .env
          echo VERSION=${{ github.event.inputs.version }} >> .env

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Login to Amazon ECR'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 'Set ECR tags'
        id: ecr-tag
        run: |
          echo "LATEST=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest" >> "$GITHUB_OUTPUT"
          echo "VERSION=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"

      - name: 'Build, tag, and push docker image to Amazon ECR'
        run: |
          docker build --platform linux/amd64 -t ${{ steps.ecr-tag.outputs.LATEST }} -t ${{ steps.ecr-tag.outputs.VERSION }} .
          docker push ${{ steps.ecr-tag.outputs.LATEST }}

      - name: 'Update image in Amazon EC2'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_KEY }}
          script: |
            docker stop ${{ env.ECR_REPOSITORY }}
            docker rm ${{ env.ECR_REPOSITORY }}
            docker rmi -f $(docker images -aq)
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            docker pull ${{ steps.ecr-tag.outputs.LATEST }}
            docker run -d -p 80:4000 -p 443:4000 --name ${{ env.ECR_REPOSITORY }} ${{ steps.ecr-tag.outputs.LATEST }}

      - name: 'Set TAG_NAME'
        id: github-tag
        run: echo "TAG_NAME=server_${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"

      - name: 'Create Release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.github-tag.outputs.TAG_NAME }}
          target_commitish: ${{ github.sha }}
