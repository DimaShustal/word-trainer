name: Deploy server

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version in format 1.0.0'
        required: true

defaults:
  run:
    shell: bash
    working-directory: ./server

env:
  AWS_REGION: eu-central-1

permissions:
  contents: write

jobs:
  deploy_server_folder:
    name: 'Deploy server folder'
    runs-on: ubuntu-latest

    steps:
#      - name: 'Checkout repository'
#        uses: actions/checkout@v4

      - name: 'Create .env file'
        run: |
          touch .env
          echo TEST=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env

#      - name: 'Configure AWS Credentials'
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ env.AWS_REGION }}
#
#      - name: 'Login to Amazon ECR'
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v2
#
#      - name: 'Set ECR_TAG'
#        id: ecr-tag
#        run: echo "ECR_TAG=${{ steps.login-ecr.outputs.registry }}/word-trainer-api-amd64:latest" >> "$GITHUB_OUTPUT"
#
#      - name: 'Build, tag, and push docker image to Amazon ECR'
#        run: |
#          docker build --platform linux/amd64 -t ${{ steps.ecr-tag.outputs.ECR_TAG }} .
#          docker push ${{ steps.ecr-tag.outputs.ECR_TAG }}
#
#      - name: 'Update image in Amazon EC2'
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ secrets.AWS_EC2_HOST }}
#          username: ${{ secrets.AWS_EC2_USER }}
#          key: ${{ secrets.AWS_EC2_KEY }}
#          script: |
#            CONTAINER_ID=$(sudo docker ps -qf "ancestor=${{ steps.ecr-tag.outputs.ECR_TAG }}")
#            docker pull ${{ steps.ecr-tag.outputs.ECR_TAG }}
#            docker restart $CONTAINER_ID
#
#      - name: 'Set TAG_NAME'
#        id: tag-name
#        run: echo "TAG_NAME=server_${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
#
#      - name: 'Create Release'
#        uses: softprops/action-gh-release@v2
#        with:
#          tag_name: ${{ steps.tag-name.outputs.TAG_NAME }}
#          target_commitish: ${{ github.sha }}
